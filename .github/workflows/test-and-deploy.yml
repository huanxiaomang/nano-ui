name: Test and deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.4.1
        with:
          version: 10.4.0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.0
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache build
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules/.cache
            **/.eslintcache
          key: ${{ runner.os }}-build-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Run ESLint
        run: pnpm lint

      - name: Type check
        run: pnpm type-check

      - name: Run tests with coverage
        run: pnpm ci-test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build
    needs: verify
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.4.1
        with:
          version: 10.4.0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.0
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Build docs
        run: pnpm docs:build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            packages/*/dist
            docs/.vitepress/dist
          retention-days: 1

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: docs/.vitepress/dist

  release:
    name: Release
    needs: [verify, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.4.1
        with:
          version: 10.4.0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.0
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: packages

      - name: Generate changelog
        run: pnpm changelog

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm release
